pipeline {
    agent {
        docker {
            image 'maven:3.5.2-jdk-8-alpine'
            args '--user root -v /run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages {
        stage('Checkout') {
            steps {
                sh 'echo passed'
                //git branch: 'main', url: 'https://github.com/zeineldin/Java-testapp.git'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // build the project and create a JAR file
                sh 'cp pom.xml /tmp/ && cp -r src /tmp/src/ && cd /tmp'
                sh 'mvn clean package'
            }
        }
    }
        stage('Build and Push Docker Image') {
          environment {
             DOCKER_IMAGE = " mzain/testimage:${BUILD_NUMBER}"
             // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
             REGISTRY_CREDENTIALS = credentials('docker-credentials')
        }
            steps {
              script {
                  //sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                  sh ' docker commit zein ${DOCKER_IMAGE}'
                  def dockerImage = docker.image("${DOCKER_IMAGE}")
                  docker.withRegistry('https://index.docker.io/v1/', "docker-credentials") {
                     dockerImage.push()
                }
            }
        }
    }
}
